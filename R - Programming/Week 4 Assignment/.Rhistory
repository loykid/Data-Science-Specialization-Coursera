{
library(dplyr)
library(magrittr)
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
# Check validity of the inputs
if((!data %in% c("heart attack", "heart failure",
"pneumonia")) == FALSE) {
stop(print("invalid outcome"))
}
# Choosing the columns based on 'outcome'
if (data == "heart attack") {
colnum <- 11
}
else if (data == "heart failure") {
colnum <- 17
}
else {
colnum <- 23
}
# Converting the columns to numeric values
data[ ,colnum] <- as.numeric(data[ ,colnum])
# Filtering out those NA values
data <- data[!is.na(data[,colnum]),]
# Get rid of warnings
data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
data[, 2] <- as.character(data[, 2])
# generate an empty vector that will be filled later, row by row, to hold the final output.
output <- vector()
# define the states column
states <- levels(data[, 7])
for(i in 1:length(states)) {
# search for matches to argument data$State within each element
statedata <- data[grep(states[i], data$State), ]
# ordering the data and omitting NA values
orderdata <- statedata[order(statedata[, col], statedata[, 2],
na.last = NA), ]
hospital <- if(num == "best") {
orderdata[1, 2]
} else if(num == "worst") {
orderdata[nrow(orderdata), 2]
} else{
orderdata[num, 2]
}
output <- append(output, c(hospital, states[i]))
}
## Return a data frame with the hospital names and the (abbreviated)
## state name
output <- as.data.frame(matrix(output, length(states), 2, byrow = TRUE))
colnames(output) <- c("hospital", "state")
rownames(output) <- states
output
}
head(rankall("heart attack", 20), 10)
rankall<- function(outcome, num = "best")
{
library(dplyr)
library(magrittr)
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
# Check validity of the inputs
if((!data %in% c("heart attack", "heart failure",
"pneumonia")) == FALSE) {
stop(print("invalid outcome"))
}
# Choosing the columns based on 'outcome'
if (data == "heart attack") {
colnum <- 11
}
else if (data == "heart failure") {
colnum <- 17
}
else {
colnum <- 23
}
# Converting the columns to numeric values
data[ ,colnum] <- as.numeric(data[ ,colnum])
# Filtering out those NA values
data <- data[!is.na(data[,colnum]),]
# Get rid of warnings
data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
data[, 2] <- as.character(data[, 2])
# generate an empty vector that will be filled later, row by row, to hold the final output.
output <- vector()
# define the states column
states <- levels(data[, 7])
for(i in 1:length(states)) {
# search for matches to argument data$State within each element
statedata <- data[grep(states[i], data$State), ]
# ordering the data and omitting NA values
orderdata <- statedata[order(statedata[, col], statedata[, 2],
na.last = NA), ]
hospital <- if(num == "best") {
orderdata[1, 2]
} else if(num == "worst") {
orderdata[nrow(orderdata), 2]
} else{
orderdata[num, 2]
}
output <- append(output, c(hospital, states[i]))
}
## Return a data frame with the hospital names and the (abbreviated)
## state name
output <- as.data.frame(matrix(output, length(states), 2, byrow = TRUE))
colnames(output) <- c("hospital", "state")
rownames(output) <- states
output
}
head(rankall("heart attack", 20), 10)
#---- Question 4 ----
rankall<- function(outcome, num = "best")
{
library(dplyr)
library(magrittr)
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
# Check validity of the inputs
if((!data %in% c("heart attack", "heart failure",
"pneumonia")) == FALSE) {
stop(print("invalid outcome"))
}
# Choosing the columns based on 'outcome'
if (outcome == "heart attack") {
colnum <- 11
}
else if (outcome == "heart failure") {
colnum <- 17
}
else {
colnum <- 23
}
# Converting the columns to numeric values
data[ ,colnum] <- as.numeric(data[ ,colnum])
# Filtering out those NA values
data <- data[!is.na(data[,colnum]),]
# Get rid of warnings
data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
data[, 2] <- as.character(data[, 2])
# generate an empty vector that will be filled later, row by row, to hold the final output.
output <- vector()
# define the states column
states <- levels(data[, 7])
for(i in 1:length(states)) {
# search for matches to argument data$State within each element
statedata <- data[grep(states[i], data$State), ]
# ordering the data and omitting NA values
orderdata <- statedata[order(statedata[, col], statedata[, 2],
na.last = NA), ]
hospital <- if(num == "best") {
orderdata[1, 2]
} else if(num == "worst") {
orderdata[nrow(orderdata), 2]
} else{
orderdata[num, 2]
}
output <- append(output, c(hospital, states[i]))
}
## Return a data frame with the hospital names and the (abbreviated)
## state name
output <- as.data.frame(matrix(output, length(states), 2, byrow = TRUE))
colnames(output) <- c("hospital", "state")
rownames(output) <- states
output
}
head(rankall("heart attack", 20), 10)
#---- Question 4 ----
rankall<- function(outcome, num = "best")
{
library(dplyr)
library(magrittr)
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
# Check validity of the inputs
if((data %in% c("heart attack", "heart failure",
"pneumonia")) == FALSE) {
stop(print("invalid outcome"))
}
# Choosing the columns based on 'outcome'
if (outcome == "heart attack") {
colnum <- 11
}
else if (outcome == "heart failure") {
colnum <- 17
}
else {
colnum <- 23
}
# Converting the columns to numeric values
data[ ,colnum] <- as.numeric(data[ ,colnum])
# Filtering out those NA values
data <- data[!is.na(data[,colnum]),]
# Get rid of warnings
data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
data[, 2] <- as.character(data[, 2])
# generate an empty vector that will be filled later, row by row, to hold the final output.
output <- vector()
# define the states column
states <- levels(data[, 7])
for(i in 1:length(states)) {
# search for matches to argument data$State within each element
statedata <- data[grep(states[i], data$State), ]
# ordering the data and omitting NA values
orderdata <- statedata[order(statedata[, col], statedata[, 2],
na.last = NA), ]
hospital <- if(num == "best") {
orderdata[1, 2]
} else if(num == "worst") {
orderdata[nrow(orderdata), 2]
} else{
orderdata[num, 2]
}
output <- append(output, c(hospital, states[i]))
}
## Return a data frame with the hospital names and the (abbreviated)
## state name
output <- as.data.frame(matrix(output, length(states), 2, byrow = TRUE))
colnames(output) <- c("hospital", "state")
rownames(output) <- states
output
}
head(rankall("heart attack", 20), 10)
#---- Question 4 ----
rankall<- function(outcome, num = "best")
{
library(dplyr)
library(magrittr)
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
# Check validity of the inputs
if(!(data %in% c("heart attack", "heart failure",
"pneumonia")) == FALSE) {
stop(print("invalid outcome"))
}
# Choosing the columns based on 'outcome'
if (outcome == "heart attack") {
colnum <- 11
}
else if (outcome == "heart failure") {
colnum <- 17
}
else {
colnum <- 23
}
# Converting the columns to numeric values
data[ ,colnum] <- as.numeric(data[ ,colnum])
# Filtering out those NA values
data <- data[!is.na(data[,colnum]),]
# Get rid of warnings
data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
data[, 2] <- as.character(data[, 2])
# generate an empty vector that will be filled later, row by row, to hold the final output.
output <- vector()
# define the states column
states <- levels(data[, 7])
for(i in 1:length(states)) {
# search for matches to argument data$State within each element
statedata <- data[grep(states[i], data$State), ]
# ordering the data and omitting NA values
orderdata <- statedata[order(statedata[, col], statedata[, 2],
na.last = NA), ]
hospital <- if(num == "best") {
orderdata[1, 2]
} else if(num == "worst") {
orderdata[nrow(orderdata), 2]
} else{
orderdata[num, 2]
}
output <- append(output, c(hospital, states[i]))
}
## Return a data frame with the hospital names and the (abbreviated)
## state name
output <- as.data.frame(matrix(output, length(states), 2, byrow = TRUE))
colnames(output) <- c("hospital", "state")
rownames(output) <- states
output
}
head(rankall("heart attack", 20), 10)
#---- Question 4 ----
rankall<- function(outcome, num = "best")
{
library(dplyr)
library(magrittr)
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
# Check validity of the inputs
if(!(state %in% unique(data$State))) stop("Invalid State")
if(!(outcome %in% outcomes)) stop("Invalid Outcome")
# Choosing the columns based on 'outcome'
if (outcome == "heart attack") {
colnum <- 11
}
else if (outcome == "heart failure") {
colnum <- 17
}
else {
colnum <- 23
}
# Converting the columns to numeric values
data[ ,colnum] <- as.numeric(data[ ,colnum])
# Filtering out those NA values
data <- data[!is.na(data[,colnum]),]
# Get rid of warnings
data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
data[, 2] <- as.character(data[, 2])
# generate an empty vector that will be filled later, row by row, to hold the final output.
output <- vector()
# define the states column
states <- levels(data[, 7])
for(i in 1:length(states)) {
# search for matches to argument data$State within each element
statedata <- data[grep(states[i], data$State), ]
# ordering the data and omitting NA values
orderdata <- statedata[order(statedata[, col], statedata[, 2],
na.last = NA), ]
hospital <- if(num == "best") {
orderdata[1, 2]
} else if(num == "worst") {
orderdata[nrow(orderdata), 2]
} else{
orderdata[num, 2]
}
output <- append(output, c(hospital, states[i]))
}
## Return a data frame with the hospital names and the (abbreviated)
## state name
output <- as.data.frame(matrix(output, length(states), 2, byrow = TRUE))
colnames(output) <- c("hospital", "state")
rownames(output) <- states
output
}
head(rankall("heart attack", 20), 10)
#---- Question 4 ----
rankall<- function(outcome, num = "best")
{
library(dplyr)
library(magrittr)
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
# Check validity of the inputs
if(!(outcome %in% outcomes)) stop("Invalid Outcome")
# Choosing the columns based on 'outcome'
if (outcome == "heart attack") {
colnum <- 11
}
else if (outcome == "heart failure") {
colnum <- 17
}
else {
colnum <- 23
}
# Converting the columns to numeric values
data[ ,colnum] <- as.numeric(data[ ,colnum])
# Filtering out those NA values
data <- data[!is.na(data[,colnum]),]
# Get rid of warnings
data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
data[, 2] <- as.character(data[, 2])
# generate an empty vector that will be filled later, row by row, to hold the final output.
output <- vector()
# define the states column
states <- levels(data[, 7])
for(i in 1:length(states)) {
# search for matches to argument data$State within each element
statedata <- data[grep(states[i], data$State), ]
# ordering the data and omitting NA values
orderdata <- statedata[order(statedata[, col], statedata[, 2],
na.last = NA), ]
hospital <- if(num == "best") {
orderdata[1, 2]
} else if(num == "worst") {
orderdata[nrow(orderdata), 2]
} else{
orderdata[num, 2]
}
output <- append(output, c(hospital, states[i]))
}
## Return a data frame with the hospital names and the (abbreviated)
## state name
output <- as.data.frame(matrix(output, length(states), 2, byrow = TRUE))
colnames(output) <- c("hospital", "state")
rownames(output) <- states
output
}
head(rankall("heart attack", 20), 10)
rankall("heart attack", 20)
as.numeric?
# generate an empty vector that will be filled later, row by row, to hold the final output.
output <- vector()
#---- Question 4 ----
rankall<- function(outcome, num = "best")
{
library(dplyr)
library(magrittr)
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
# Check validity of the inputs
if(!(outcome %in% outcomes)) stop("Invalid Outcome")
# Choosing the columns based on 'outcome'
if (outcome == "heart attack") {
colnum <- 11
}
else if (outcome == "heart failure") {
colnum <- 17
}
else {
colnum <- 23
}
# Converting the columns to numeric values
data[ ,colnum] <- as.numeric(data[ ,colnum])
# Filtering out those NA values
data <- data[!is.na(data[,colnum]),]
# Get rid of warnings
data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
data[, 2] <- as.character(data[, 2])
# generate an empty vector that will be filled later, row by row, to hold the final output.
output <- vector()
# define the states column
states <- levels(data[, 7])
for(i in 1:length(states)) {
# search for matches to argument data$State within each element
statedata <- data[grep(states[i], data$State), ]
# ordering the data and omitting NA values
orderdata <- statedata[order(statedata[, col], statedata[, 2],
na.last = NA), ]
hospital <- if(num == "best") {
orderdata[1, 2]
} else if(num == "worst") {
orderdata[nrow(orderdata), 2]
} else{
orderdata[num, 2]
}
output <- append(output, c(hospital, states[i]))
}
## Return a data frame with the hospital names and the (abbreviated)
## state name
output <- as.data.frame(matrix(output, length(states),2 , byrow = TRUE))
colnames(output) <- c("hospital", "state")
rownames(output) <- states
output
}
head(rankall("heart attack", 20), 10)
#---- Question 4 ----
rankall<- function(outcome, num = "best")
{
library(dplyr)
library(magrittr)
data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
# Check validity of the inputs
if(!(outcome %in% outcomes)) stop("Invalid Outcome")
# Choosing the columns based on 'outcome'
if (outcome == "heart attack") {
colnum <- 11
}
else if (outcome == "heart failure") {
colnum <- 17
}
else {
colnum <- 23
}
# Changing values to numeric
data[ ,colnum] <- as.numeric(data[ ,colnum])
# Removing NA values
data <- data[!is.na(data[,colnum]),]
# Splitting the data
data <- split(data, data$State)
ans <- lapply(data, function(x, num) {
x <- x[order(x[,colnum], x$Hospital.Name),]
if(class(num) == "character") {
if(num == "best") {
return (x$Hospital.Name[1])
}
else if(num == "worst") {
return (x$Hospital.Name[nrow(x)])
}
}
else {
return (x$Hospital.Name[num])
}
}, num)
#Return data.frame with format
return ( data.frame(hospital=unlist(ans), state=names(ans)) )
}
head(rankall("heart attack", 20), 10)
best("SC", "heart attack")
best("NY", "pneumoina")
best("NY", "pneumonia")
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
rankhospital("WA", "heart attack", 7)
rankhospital("NC", "heart attack", "worst")
best("AK", "pneumonia")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("WA", "heart attack", 7)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
rankhospital("NY", "heart attack", 7)
best("NY", "pneumonia")
best("SC", "heart attack")
head(rankall("heart attack", 20), 10)
